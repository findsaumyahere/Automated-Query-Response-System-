/*
 * Purpose: Provide interface to store a solution and its initial FAQs
 * Solution  : The solution to the FAQ asked
 * FAQ    : Set of questions whose answer is the solution
 */
//Sample Check
package faq;

import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.LinkedList;
import java.util.List;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.UIManager;

/**
 *
 * @author Pranav Prakash Jha
 */
public class AddFaq extends javax.swing.JFrame {
    private static final long serialVersionUID = 1L;
	int TOTAL_LINES;                       // no of faqs entered
	String[] faq_id_to_pass;              // Array of ids to be passed to ResolveSimilarWords
	List<JTextField> TEXTFIELD_ARRAY;     // Array of TextFields

	public AddFaq() {
		initComponents();
		this.TEXTFIELD_ARRAY = new LinkedList<>();
		TOTAL_LINES = 0;

		container.setLayout(new GridBagLayout());

		// Adding one line to input sample FAQ in start
		addTextField();

	}


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        solutionField = new javax.swing.JTextPane();
        home = new javax.swing.JButton();
        addMore = new javax.swing.JButton();
        submit = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        container = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(700, 450));

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel1.setText("FAQ Answer:");

        solutionField.setText("");
        solutionField.setToolTipText("Answer of this set of FAQs");
        jScrollPane2.setViewportView(solutionField);

        home.setText("Home");
        home.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeActionPerformed(evt);
            }
        });

        addMore.setText("Add More");
        addMore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMoreActionPerformed(evt);
            }
        });

        submit.setText("Submit");
        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });

        jScrollPane1.setPreferredSize(new java.awt.Dimension(529, 223));

        container.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        container.setToolTipText("Set of FAQ for the above answer");
        container.setAutoscrolls(true);
        container.setLayout(new java.awt.GridBagLayout());
        jScrollPane1.setViewportView(container);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(home)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(addMore)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(submit)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane2)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 578, Short.MAX_VALUE))
                        .addGap(12, 12, 12))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(home)
                    .addComponent(addMore)
                    .addComponent(submit))
                .addGap(24, 24, 24))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    // Sends to Administrator Page
    private void homeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeActionPerformed
        setVisible(false);
        Administrator adm = new Administrator();
        adm.setVisible(true);
        dispose();
    }//GEN-LAST:event_homeActionPerformed

    private void addMoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addMoreActionPerformed
        addTextField();
    }//GEN-LAST:event_addMoreActionPerformed


    private void submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitActionPerformed
      //Retrieves the solution
        String solution = solutionField.getText();
        System.out.println("Solution: \"" + solution + "\"");

        List<String> faqs = new ArrayList<>(TEXTFIELD_ARRAY.size());
        //////REMOVE COMMENTS AFTER TESTING////////////////////////////////////////////////
//        for (JTextField txt : TEXTFIELD_ARRAY){
//            String str = txt.getText().replaceAll("'", "").replaceAll("\"","") .toLowerCase();
//            if (!str.isEmpty() && !faqs.contains(str)) {
//                faqs.add(str);
//            }
//        }
//        
        //////////////////UNTILL HERE///////////////////
        
        ///////To be removed after testing////////////////
        String[] tempAry = {"After use loop, the program can't execute normally",
            "when use loop, it shows syntax error message",
            "When calculate division, the program can't execute normally",
            "when use if statement, the result produced by the program is an error",
            "When use if statement it shows syntax error message",
            "Divison by zero gives syntax error",
            "when division operation will be performed it shows syntax error"
        };
//        String[] tempAry = {"usez loopz, programz can'tz executez normallyz",
//            "usez loopz showsz syntaxz errorz messagez",
//            "calculatez divisionz programz can'tz executez normallyz",
//            "usez ifz statementz resultz producedz programz errorz",
//            "usez ifz statementz showsz syntaxz errorz messagez",
//            "Divisonz zeroz givesz syntaxz errorz",
//            "divisionz operationz performedz showsz syntaxz errorz"
//        };
        for(int i=0; i<7; i++){
            String str = tempAry[i].replaceAll("'", "").replaceAll("\"","") .toLowerCase();
            if (!str.isEmpty() && !faqs.contains(str)) {
                faqs.add(str);
            }
        }
        //////////////////REMOVE UNTILL THIS POINT///////////////////////////////////////
        
        
        if (solution.isEmpty() || faqs.isEmpty()) {
            System.err.println("No solution added");
            UIManager.put("Button.defaultButtonFollowsFocus", Boolean.TRUE);
            JDialog.setDefaultLookAndFeelDecorated(true);
            JOptionPane.showMessageDialog(null, "Add solution of those FAQs in FAQ Answer field and atleast one FAQ", "Incomplete Form", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (!solution.isEmpty() && !faqs.isEmpty()) {
        	//So that null value is not sent to store in SQL
            //Pops a dialog box to confirm to save the Query
            UIManager.put("Button.defaultButtonFollowsFocus", Boolean.TRUE);
            JDialog.setDefaultLookAndFeelDecorated(true);
            int response = JOptionPane.showConfirmDialog(null, "Do you want to save the answer?", "Confirm",
                    JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

            //If user wants to save it
            /**
             * Step 1. Save the Solution and faqs into database (Abhigyan) 
             * Step 2. Send the faqs to ResolveSimilarWords
             */
            
            if (response == JOptionPane.YES_OPTION) {
                submit.setEnabled(false);
                addMore.setEnabled(false);
                home.setEnabled(false);

                //Step 1. Adding the question in the questions table
                Calendar calendar = Calendar.getInstance();
                String soln_id = String.valueOf(calendar.getTimeInMillis());

                try {
                    String sql = null;
                    sql = "CREATE TABLE IF NOT EXISTS SOLUTION(soln_id VARCHAR(20), query_soln TEXT, PRIMARY KEY(soln_id))";

                    if (!UpdateDatabase.update(sql)) {
                        System.out.println("Error creating table Solution!");
                    }
                    
                    sql = "INSERT INTO SOLUTION VALUES('" + soln_id + "','" + solution + "')";
                    if (!UpdateDatabase.update(sql)) {
                        System.out.println("2. Error inserting into Solution!");
                    }
                    
                    sql = "CREATE TABLE IF NOT EXISTS CLUSTERS(c_id VARCHAR(20), soln_id VARCHAR(20), PRIMARY KEY(c_id), FOREIGN KEY(soln_id) REFERENCES SOLUTION(soln_id))";
                    if (!UpdateDatabase.update(sql)) {
                        System.out.println("Error creating table Clusters!");
                    }
                    
                    sql = "CREATE TABLE IF NOT EXISTS QUERY(c_id VARCHAR(20) NULL, query_id VARCHAR(20), soln_id VARCHAR(20), ques TEXT, PRIMARY KEY(query_id), FOREIGN KEY(c_id) REFERENCES CLUSTERS(c_id))";
                    if (!UpdateDatabase.update(sql)) {
                        System.out.println("Error creating table Query!");
                    }
                    
                    faq_id_to_pass = new String[faqs.size()];
                    int count = 0;
                    
                    for(String entry : faqs){
                    	calendar = Calendar.getInstance();
                    	String query_id = String.valueOf(calendar.getTimeInMillis());
                        faq_id_to_pass[count++] = query_id;
                    	System.out.println(query_id);
                        sql = "INSERT INTO QUERY(query_id, soln_id, ques) VALUES('" + query_id + "','" + soln_id + "','" + entry + "')";
                        if (!UpdateDatabase.update(sql)) {
                            System.out.println("2. Error inserting solution!");
                        }
                    }
                    

                } catch (SQLException e) {
                    System.err.println(e);
                    soln_id = null;
                } finally {
                    if (soln_id != null) {
                        System.out.println("Added solution " + solution);
                    } else {
                        System.err.println("5. Failed in retrieving id");
                    }
                }

                setVisible(false);
                /* faq_id: the id of that faq; index of faq in DB
                 faqs: the solution lines for that faq, a list of line supposedly correct for that faq */

                //////To be removed after DB task completion/////////////
                soln_id = "tempID";
                ////////////////////////////////////////////////////////
                System.out.println("AddFaq end");
                ResolveSimilarWords rsm = new ResolveSimilarWords(soln_id, faqs, solution, faq_id_to_pass);
                rsm.setVisible(true);
                dispose();
            }
        }

    }//GEN-LAST:event_submitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddFaq.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddFaq.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddFaq.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddFaq.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddFaq().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addMore;
    private javax.swing.JPanel container;
    private javax.swing.JButton home;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextPane solutionField;
    private javax.swing.JButton submit;
    // End of variables declaration//GEN-END:variables

    //Adds one text field in jPanel container and adds the textField in the array TEXTFIELD_ARRAY
    private void addTextField() {
        GridBagConstraints frameConstraints = new GridBagConstraints();
        JTextField t = new JTextField("");
        t.setColumns(50);
        t.setMargin(new Insets(5, 5, 5, 5));
        //Adds the text fiels to the list TEXTFIELD_ARRAY
        TEXTFIELD_ARRAY.add(t);

        JLabel jb = new JLabel("Ans" + (TOTAL_LINES + 1), JLabel.LEFT);
        frameConstraints.gridx = 0;
        frameConstraints.gridy = TOTAL_LINES;
        frameConstraints.weighty = 0.1;
        frameConstraints.insets = new Insets(15, 15, 15, 15);
        container.add(jb, frameConstraints);

        frameConstraints.gridx = 1;
        frameConstraints.weighty = 0.9;
        frameConstraints.fill = GridBagConstraints.HORIZONTAL;
        container.add(TEXTFIELD_ARRAY.get(TOTAL_LINES), frameConstraints);
        container.revalidate();
        validate();
        container.repaint();
        TOTAL_LINES++;
    }
}
